#primary-menu:before, .header-container:before, #primary-menu:after, .header-container:after {
  content: '';
  display: table; }

#primary-menu:after, .header-container:after {
  clear: both; }

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  border: 0;
  box-sizing: border-box;
  font-family: inherit;
  font-size: 100%;
  margin: 0;
  outline: 0 none;
  padding: 0;
  vertical-align: baseline; }

audio,
canvas,
video {
  display: inline-block; }

ol,
ul {
  list-style: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

caption,
th,
td {
  font-weight: normal;
  text-align: left;
  vertical-align: middle; }

q,
blockquote {
  quotes: none; }

q:before,
q:after,
blockquote:before,
blockquote:after {
  content: none; }

a img {
  border: 0; }

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
summary,
main {
  display: block; }

img {
  font-size: 0;
  height: auto; }

img,
object,
embed {
  max-width: 100%; }

textarea,
input {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  box-shadow: none;
  box-sizing: border-box;
  margin: 0;
  max-width: 100%;
  outline: 0 none; }

/* blue color */
/* black color */
@font-face {
  font-family: "BebasNeue-Bold";
  src: url("../fonts/BebasNeue-Bold.eot?") format("eot"), url("../fonts/BebasNeue-Bold.woff2") format("woff2"), url("../fonts/BebasNeue-Bold.woff") format("woff"), url("../fonts/BebasNeue-Bold.ttf") format("truetype"), url('../fonts/BebasNeue-Bold.svg#str-replace(BebasNeue-Bold, " ", "_")') format("svg"); }

.container {
  max-width: 100%;
  margin-left: 0.9375rem;
  margin-right: 0.9375rem; }
  .container:after {
    content: " ";
    display: block;
    clear: both; }
  @media (min-width: 48em) {
    .container {
      max-width: 100%;
      margin-left: 3.75rem;
      margin-right: 3.75rem; }
      .container:after {
        content: " ";
        display: block;
        clear: both; } }
  @media (min-width: 64em) {
    .container {
      max-width: 71.25rem;
      margin-left: auto;
      margin-right: auto; }
      .container:after {
        content: " ";
        display: block;
        clear: both; } }

h1,
h2,
h3,
h4,
h5 {
  font-family: "BebasNeue-Bold", Helvetica, Arial, sans-serif;
  font-weight: 400;
  line-height: 1.3; }

h1 {
  font-size: 2.8125rem; }
  @media (min-width: 48em) {
    h1 {
      font-size: 4rem; } }

h2 {
  font-size: 2.1875rem; }
  @media (min-width: 48em) {
    h2 {
      font-size: 2.8125rem; } }

h3 {
  font-size: 2rem; }

h4 {
  font-size: 1.4375rem; }

h5 {
  font-size: 1.0625rem; }

h6 {
  font-family: Helvetica, Arial, sans-serif;
  font-size: 0.9375rem;
  font-weight: 700;
  line-height: 1.3; }

p {
  margin-bottom: 0.9375rem; }

a {
  color: #f37735;
  outline: none;
  text-decoration: none; }
  a:focus, a:visited {
    color: #f39f56; }
  a:hover {
    color: #c4c2b9; }
  a:active {
    color: #f37735; }

.link--citrine-white {
  color: #f9edd3; }
  .link--citrine-white:focus, .link--citrine-white:visited {
    color: #f9fcec; }
  .link--citrine-white:hover {
    color: #fff; }
  .link--citrine-white:active {
    color: #f9edd3; }

.link--underline {
  border-style: solid;
  border-width: 0rem 0rem 0.0625rem;
  padding-bottom: 0.1875rem; }

.link--desert-storm, .link--desert-storm:focus, .link--desert-storm:visited {
  color: #5b5b5b; }

.link--desert-storm:active, .link--desert-storm:hover {
  color: #bebebe; }

label {
  display: block;
  font-weight: 400; }

/* ==========================================================================
   Global button styles
   ========================================================================== */
.button, button,
input[type='submit'] {
  border-radius: 5px;
  background-color: #69ac3b;
  border: 1px solid #69ac3b;
  color: #fff;
  display: inline-block;
  font-size: 0.875rem;
  font-weight: 400;
  padding: 24px 47px;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase; }
  .button:hover, button:hover,
  input[type='submit']:hover, .button:focus, button:focus,
  input[type='submit']:focus, .button:active, button:active,
  input[type='submit']:active, .button:visited, button:visited,
  input[type='submit']:visited {
    color: #fff; }
  .button--full {
    width: 100%; }

.form-textarea,
.form-text {
  border: 0.0625rem solid #c2c0b8;
  color: #66656c;
  font-size: 1rem;
  margin-bottom: 0.9375rem;
  padding: 0.3125rem 0.9375rem;
  width: 100%; }
  .form-textarea::-ms-clear,
  .form-text::-ms-clear {
    display: none; }
  .form-textarea.focused, .form-textarea:focus,
  .form-text.focused,
  .form-text:focus {
    border-color: #65646b;
    color: #66656c; }

.form-text {
  height: 2.75rem; }
  .form-text.error {
    border-color: #8c211e;
    color: #66656c; }
  .form-text.success {
    border-color: #6bae92;
    color: #66656c; }

.font--small {
  font-size: 0.875rem; }

.font--tiny {
  font-size: 0.8125rem; }

.granite-green {
  color: #898574; }

.mist-gray {
  color: #c4c2b9; }

.blue {
  color: #51788d; }

.white {
  color: #fff; }

.bg--white {
  background-color: #fff; }

.bg--light-tan {
  background-color: #f4f3f0; }

.bg--light-grey {
  background-color: #f3f5f6; }

.bg--slate-grey {
  background-color: #dce4e7; }

.bg--teal {
  background-color: #6bae92; }

.bg-blue {
  background-color: #3b5999; }

.bg-blue-light {
  background-color: #1da1f2; }

.visuallyhidden, .branding .site-title {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

[class^='icon-']:before,
[class*=' icon-']:before {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  font-size: inherit;
  font: normal normal normal 14px/1 FontAwesome;
  text-rendering: auto; }

.icon-facebook:before {
  content: '\f09a'; }

.icon-twitter:before {
  content: '\f099'; }

.icon-youtube-play:before {
  content: '\f16a'; }

@-ms-viewport {
  width: extend-to-zoom;
  zoom: 1; }

@viewport {
  width: extend-to-zoom;
  zoom: 1; }

html {
  font-family: Helvetica, Arial, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  color: #66656c;
  font-size: 16px;
  font-smoothing: antialiased;
  line-height: 1.4; }

body {
  -webkit-text-size-adjust: none;
      -ms-text-size-adjust: none;
          text-size-adjust: none; }

.navbar-toggle {
  background-color: transparent;
  border: 0;
  color: #69ac3b;
  cursor: pointer;
  display: block;
  height: 22px;
  margin: 0;
  padding: 0;
  position: absolute;
  right: 30px;
  text-align: center;
  top: 35px;
  width: 26px;
  z-index: 1; }
  @media (min-width: 48em) {
    .navbar-toggle {
      right: 31px;
      top: 37px; } }
  @media (min-width: 64em) {
    .navbar-toggle {
      display: none !important; } }
  .navbar-toggle span {
    display: block;
    height: 100%;
    line-height: 23px;
    text-align: center;
    text-indent: -999em;
    width: 100%; }
    .navbar-toggle span:before {
      display: block;
      float: left;
      font-size: 1.875rem;
      height: 100%;
      line-height: 23px;
      text-indent: 0;
      width: 100%; }

#primary-menu {
  list-style: none;
  margin: 0;
  padding: 0;
  text-align: left; }
  #primary-menu li.menu-item {
    list-style: none;
    position: relative; }
    #primary-menu li.menu-item.current-menu-item > a, #primary-menu li.menu-item.current-menu-parent > a {
      color: #467327 !important; }
    #primary-menu li.menu-item a {
      color: #69ac3b;
      display: block;
      font-size: 0.875rem;
      padding: 15px 0;
      text-transform: uppercase; }
      #primary-menu li.menu-item a:hover {
        color: #467327;
        text-decoration: none; }
  #primary-menu > li.menu-item {
    border: none !important;
    float: left; }
    #primary-menu > li.menu-item:last-of-type {
      margin-right: 0; }
    #primary-menu > li.menu-item > a {
      text-transform: uppercase;
      padding: 35px 30px 36px; }
  @media (min-width: 64em) {
    #primary-menu li.menu-item {
      position: relative; }
      #primary-menu li.menu-item a {
        font-size: 0.8125rem;
        margin-right: 0 !important; }
        #primary-menu li.menu-item a:hover {
          background-color: #0175ae;
          color: #fff;
          text-decoration: none; }
      #primary-menu li.menu-item.active > a {
        background-color: #0175ae;
        color: #fff; } }

#secondary-menu {
  list-style: none;
  margin: 0;
  padding: 0;
  font-size: 14px;
  text-transform: uppercase; }
  #secondary-menu li {
    display: inline-block;
    padding: 0 29px; }
    #secondary-menu li a {
      color: #fff; }

.navigation-full {
  background-color: #69ac3b;
  text-align: center;
  padding: 34px 0; }

header {
  min-height: 5.625rem; }

.branding {
  max-width: 100%;
  margin-right: 3.75rem; }
  @media (min-width: 64em) {
    .branding {
      display: inline-block;
      margin: 0;
      padding: 24px 0;
      vertical-align: middle;
      width: 25%; } }

.site-image a {
  display: block;
  line-height: 0; }

.site-image img {
  width: auto;
  max-width: 100%; }

.branding-bottom {
  bottom: 0;
  height: 100%;
  left: 100%;
  overflow-y: auto;
  padding: 0.625rem 0.9375rem;
  position: fixed;
  top: 0;
  z-index: 1; }
  .branding-bottom .box-search {
    padding: 10px 0; }
  @media (min-width: 64em) {
    .branding-bottom {
      background-color: transparent;
      display: inline-block !important;
      float: right;
      left: 0 !important;
      overflow: visible;
      position: static;
      text-align: right;
      vertical-align: middle;
      padding: 0; } }

#footer {
  background-color: #e2e2e2;
  font-size: 0.6875rem;
  height: 8.0625rem;
  line-height: 1.125rem;
  padding: 50px 0 46px;
  z-index: 9; }
  #footer.fix-bottom {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
    margin: 0; }
  #footer .site-info {
    width: 75%;
    display: inline-block;
    white-space: nowrap;
    text-transform: uppercase;
    margin-right: -6px;
    vertical-align: middle; }
  #footer .footer-social {
    text-align: right;
    display: inline-block;
    width: 25%;
    vertical-align: middle; }
    #footer .footer-social ul {
      list-style: none;
      margin: 0;
      padding: 0; }
      #footer .footer-social ul li {
        list-style: none;
        display: inline-block;
        padding-left: 16px; }
    #footer .footer-social a {
      color: #fff;
      display: block;
      text-indent: -999em;
      font-size: 0;
      background: red;
      border-radius: 50%;
      height: 32px;
      width: 32px;
      text-align: center;
      line-height: 32px; }
      #footer .footer-social a:before {
        vertical-align: middle; }
      #footer .footer-social a:hover {
        text-decoration: underline; }
  #footer .copyright {
    width: 48.91775%;
    float: left;
    margin-right: 2.1645%; }
  #footer .privacy {
    width: 48.91775%;
    float: right;
    margin-right: 0;
    text-align: right; }

.block-3col-info {
  position: relative; }
  .block-3col-info__content {
    display: -ms-flexbox;
    display: flex;
    position: relative; }
  .block-3col-info__left, .block-3col-info__right {
    width: 25%;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: center;
        align-items: center;
    text-align: center;
    -ms-flex-pack: center;
        justify-content: center;
    position: relative; }
    .block-3col-info__left:before, .block-3col-info__right:before {
      background: #51788d;
      position: absolute;
      top: 0;
      bottom: 0;
      right: 0;
      left: 0;
      opacity: .8;
      content: ''; }
  .block-3col-info__right:before {
    background: #69ac3b; }
  .block-3col-info__middle {
    width: 50%;
    background: white;
    padding: 40px;
    text-align: center; }
  .block-3col-info__image {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0; }
    .block-3col-info__image img {
      min-height: 100%;
      min-width: 100%;
      max-height: 100%;
      max-width: 100%;
      position: absolute; }
  .block-3col-info__text {
    position: relative;
    z-index: 1;
    color: #fff; }
    .block-3col-info__text span {
      display: block; }
    .block-3col-info__text__big {
      font-size: 90px; }
    .block-3col-info__text__small {
      text-transform: uppercase;
      font-size: 15px; }
  .block-3col-info__title {
    margin: 0 0 20px;
    font-size: 45px;
    text-align: left; }
  .block-3col-info__body {
    text-align: left;
    font-size: 1.25rem;
    margin-bottom: 10px;
    display: inline-block; }
  .block-3col-info__button {
    margin-bottom: 65px; }
  .block-3col-info__scrolldown {
    display: inline-block;
    text-align: center; }
    .block-3col-info__scrolldown__icon {
      margin-bottom: 8px; }

.block-img-text {
  @extends %clearfix;
  background: #69ac3b;
  margin-bottom: 10px;
  width: 555px; }
  .block-img-text__image {
    line-height: 0;
    position: relative;
    width: 262px; }
    .block-img-text__image img {
      bottom: 0;
      left: 0;
      position: absolute;
      right: 0;
      top: 0; }
  .block-img-text__content {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    height: 262px;
    -ms-flex-pack: justify;
        justify-content: space-between;
    padding: 20px;
    position: relative;
    width: 100%; }
    .block-img-text__content:before, .block-img-text__content:after {
      content: none; }
  .block-img-text__title {
    color: #fff;
    text-transform: capitalize; }
  .block-img-text--image .block-img-text__content {
    width: calc(100% - 262px); }

@media (min-width: 48em) {
  .block-video_hero {
    margin-bottom: 20px; } }

.block-video_hero .vidyard-video {
  padding-bottom: 0; }
  .block-video_hero .vidyard-video .vidyard_player > span {
    position: relative !important;
    height: 18.75rem !important;
    width: 100% !important;
    transform: translate(-50%, 0px);
    min-width: 64.3125rem;
    left: 50%; }
    @media (min-width: 48em) {
      .block-video_hero .vidyard-video .vidyard_player > span {
        min-height: 25rem;
        min-width: 85.75rem; } }
    @media (min-width: 64em) {
      .block-video_hero .vidyard-video .vidyard_player > span {
        min-height: 35rem;
        min-width: 120.0625rem; } }

.block-video_hero .vidyard-banner {
  position: relative;
  overflow: hidden; }
  .block-video_hero .vidyard-banner:before {
    background-color: rgba(0, 0, 0, 0.2);
    content: '';
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: 2; }

.block-video_hero .overlay-text {
  color: #fff;
  left: 50%;
  position: absolute;
  text-align: center;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 90%;
  z-index: 3; }
  @media (min-width: 48em) {
    .block-video_hero .overlay-text {
      width: 70%; } }

.vidyard-video {
  height: auto;
  padding-bottom: 56.25%;
  position: relative; }
  .vidyard-video:before {
    background-color: rgba(0, 0, 0, 0.7);
    content: '';
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: 2; }
  .vidyard-video .vidyard_player > span {
    position: static !important;
    height: auto !important;
    width: auto !important; }

@media (min-width: 64em) {
  .vidyard-banner {
    height: 35rem;
    padding-bottom: 0; } }

.block-video {
  height: 35rem;
  position: relative;
  background-color: rgba(0, 0, 0, 0.2); }
  .block-video__content {
    left: 50%;
    position: absolute;
    text-align: center;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    z-index: 3; }
  .block-video__text {
    text-transform: uppercase; }
    .block-video__text__small {
      font-size: 13px;
      margin: 0 0 20px; }
    .block-video__text__big {
      font-size: 70px;
      color: #51788d;
      margin: 0 0 20px; }
  .block-video__image {
    margin-bottom: 20px; }
  .block-video__icon span {
    border: 7px solid #51788d;
    position: relative;
    width: 68px;
    border-radius: 50%;
    height: 68px;
    font-size: 28px;
    text-align: center;
    color: #51788d; }
    .block-video__icon span:before {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%); }
    .block-video__icon span:hover {
      cursor: pointer; }

.block-search-forom .navbar-form {
  display: -ms-flexbox;
  display: flex; }
  .block-search-forom .navbar-form .form-group {
    width: 100%;
    padding-right: 20px; }
  .block-search-forom .navbar-form input.form-control {
    padding: 24px 20px;
    border: 0;
    border-radius: 5px;
    width: 100%; }

.sharethis-big__icon {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: start;
      justify-content: flex-start; }
  .sharethis-big__icon__item {
    margin: 10px;
    border-radius: 7px; }
  .sharethis-big__icon__link {
    display: -ms-flexbox;
    display: flex;
    color: white; }
    .sharethis-big__icon__link:focus, .sharethis-big__icon__link:visited {
      color: #fff; }
    .sharethis-big__icon__link__text {
      -ms-flex-item-align: center;
          align-self: center;
      padding-left: 29px;
      padding-right: 60px;
      background: rgba(255, 255, 255, 0.05);
      padding-top: 14px;
      padding-bottom: 10px; }
      .sharethis-big__icon__link__text.twitter-text {
        background: rgba(0, 0, 0, 0.05); }
    .sharethis-big__icon__link .iconfacebook {
      -ms-flex-item-align: end;
          align-self: flex-end;
      line-height: 0;
      padding-top: 13px;
      padding-left: 25px;
      margin-bottom: -5px;
      height: 100%;
      padding-right: 15px; }
    .sharethis-big__icon__link .fa-facebook {
      font-size: 60px; }
    .sharethis-big__icon__link span.icontwitter {
      font-size: 40px;
      padding: 6px 15px; }

.block-image-full-width__image {
  line-height: 0; }
  .block-image-full-width__image img {
    width: 100%; }

.block-image-full-width__content {
  background-color: #fff;
  border-top: 5px solid #0076b6;
  margin: -212px auto 0;
  max-width: 650px;
  min-height: 400px;
  padding: 65px 80px;
  position: relative;
  z-index: 1; }

.block-image-full-width .block-title {
  color: #0076b6;
  font-size: 42px;
  margin-bottom: 20px;
  text-transform: uppercase; }
  .block-image-full-width .block-title a {
    color: #0076b6; }

.block-image-full-width--inner {
  background-color: red;
  position: relative; }
  .block-image-full-width--inner .block-image-full-width__content {
    background-color: rgba(0, 118, 182, 0.9);
    border-top: 0;
    max-width: 720px;
    height: 330px;
    position: absolute;
    margin: 0;
    min-height: auto;
    z-index: 1;
    top: 50%;
    color: #fff;
    left: 50%;
    margin-top: -165px;
    margin-left: -360px; }
  .block-image-full-width--inner .block-title {
    color: #fff;
    font-size: 42px;
    margin-bottom: 20px;
    text-transform: uppercase; }
    .block-image-full-width--inner .block-title a {
      color: #fff; }

.welcome-paragraph {
  padding: 2.5rem 0rem; }

/*# sourceMappingURL=data:application/json;base64, */
